require 'erb'
require 'rake'

module DpkgTools
  module Package
    module Rails
      class Setup < DpkgTools::Package::Setup
        class << self
          def bootstrap_file_path(base_path, filename)
            File.join(base_path, 'config', filename)
          end
          
          def data_class
            DpkgTools::Package::Rails::Data
          end
          
          def generate_mongrel_cluster_config_hash(data, config)
            data.mongrel_cluster_config_hash.merge({'cwd' => "#{data.app_install_path}/current",
                                                    'pid_file' => "#{data.pidfile_dir_path}/mongrel.pid",
                                                    'log_file' => 'log/mongrel.log',
                                                    'user' => data.name,
                                                    'group' => data.name})
          end
          
          def generate_mongrel_cluster_config(data, config)
            message = ["# Auto-generated by dpkg-tools, don't edit!",
                       "# You can edit config/deb.yml and then regenerate this file",
                       "# with rake dpkg:mongrel_cluster."]
            
            yaml = generate_mongrel_cluster_config_hash(data, config).to_yaml.split("\n")
            yaml.shift
            
            File.open(config.base_path + '/config/mongrel_cluster.yml', 'w') do |f|
              f.write((message + [""] + yaml).join("\n"))
            end
          end
          
          def resource_file_names
            ['apache.conf.erb', 'logrotate.conf.erb', 'mongrel_cluster_init.erb', 'deploy.rb']
          end
          
          def prepare_package(data, config)
            resource_file_names.each do |filename|
              bootstrap_file(config.base_path, filename)
            end
            
            create_dir_if_needed(data.deployers_ssh_keys_dir)
            
            sh "capify \"#{config.base_path}\""
            generate_mongrel_cluster_config(data, config)
          end
          
          def reset_package_resource_files(data, config)
            resource_file_names.each do |filename|
              bootstrap_file(config.base_path, filename, :backup => true)
            end
          end
        end
        
        attr_reader :data, :config
        
        def control_file_classes
          DpkgTools::Package::Rails::ControlFiles.classes
        end
        
        def config_options
          {:base_path => @data.base_path}
        end
        
        def prepare_package
          self.class.prepare_package(data, config)
        end
        
        def generate_mongrel_cluster_config
          self.class.generate_mongrel_cluster_config(data, config)
        end
        
        def reset_package_resource_files
          self.class.reset_package_resource_files(data, config)
        end
      end
    end
  end
end
