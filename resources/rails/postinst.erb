#!/bin/bash -e

# Fix permission on the .ssh dir
chown -R <%= name %>:<%= name %> "<%= app_install_path %>/.ssh"

# Add the correct /etc/sudoers entries, or modify the existing one (if it's there)
# remove any existing one
SUDOERS=`sed -e '/^# #Package <%= name %> START#/, /^# #Package <%= name %> STOP#/ d' /etc/sudoers`

SUDOERS_TMP=`mktemp` || exit 1

# append the string
cat <<EOS > $SUDOERS_TMP
$SUDOERS
# #Package <%= name %> START# Autogenerated by dpkg-tools for this package, will be overwritten by package maintainer scripts
<%= user %>      ALL = NOPASSWD: <%= init_script_path %> start, <%= init_script_path %>  stop, <%= init_script_path %>  restart
# #Package <%= name %> STOP# Autogenerated section stops
EOS

# check the syntax of the sudoers string
visudo -cf $SUDOERS_TMP
if [ $? -ne 0 ]; then
	rm -f $SUDOERS_TMP
	exit 1
fi

# rewrite /etc/sudoers
cat $SUDOERS_TMP > /etc/sudoers
if [ $? -ne 0 ]; then
	rm -f $SUDOERS_TMP
	exit 1
fi

# nuke the tmpfile
rm -f $SUDOERS_TMP

# Make the app's DB
mysql -u root <<EOT
<% if database_configurations['test'] -%>
CREATE DATABASE \`<%= database_configurations['test']['database'] %>\`;
GRANT ALL PRIVILEGES ON \`<%= database_configurations['test']['database'] %>\`.* TO \`<%= database_configurations['test']['username'] %>\`@localhost;
<% end -%>
<% if database_configurations['production'] -%>
CREATE DATABASE \`<%= database_configurations['production']['database'] %>\`;
GRANT ALL PRIVILEGES ON \`<%= database_configurations['production']['database'] %>\`.* TO \`<%= database_configurations['test']['username'] %>\`@localhost;
<% end -%>
EOT

# invoke update-rc.d to get the app's init script loaded
update-rc.d "<%= name %>" defaults 85 15

# enable apache's mod_proxy_balancer
a2enmod proxy_balancer

# enable the apache config we just installed
a2ensite <%= name %>

# restart apache
invoke-rc.d apache2 force-reload

# N.B. we don't spawn mongrels here - that's done through capistrano

